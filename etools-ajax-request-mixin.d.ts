/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   etools-ajax-request-mixin.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {dedupingMixin} from '@polymer/polymer/lib/utils/mixin.js';


/**
 * A behavior that will allow you to make a request in any Polymer element you need.
 */
declare function EtoolsAjaxRequestMixin<T extends new (...args: any[]) => {}>(base: T): T & EtoolsAjaxRequestMixinConstructor & EtoolsAjaxDataMixinConstructor;

import {EtoolsAjaxDataMixinConstructor, EtoolsAjaxDataMixin} from './etools-ajax-data-mixin.js';

interface EtoolsAjaxRequestMixinConstructor {
  new(...args: any[]): EtoolsAjaxRequestMixin;
}

export {EtoolsAjaxRequestMixinConstructor};

interface EtoolsAjaxRequestMixin extends EtoolsAjaxDataMixin {
  readonly lastAjaxRequest: object|null|undefined;
  readonly activeAjaxRequests: any[]|null|undefined;
  readonly reqProgress: object|null|undefined;
  checkReqProgress: object|null|undefined;

  /**
   * Check for cached data if needed, if no cached data then fire new request
   * returns Promise
   */
  sendRequest(reqConfig: any, activeReqKey: any): any;

  /**
   * Fire new request
   */
  _doRequest(reqConfigOptions: any, cachingInfo: any, checkProgress: any, activeReqKey: any): any;
  _addToActiveAjaxRequests(key: any, request: any): void;
  _removeActiveRequestFromList(key: any): void;
  getActiveRequestByKey(key: any): any;
  abortRequestByKey(key: any): void;
  abortActiveRequest(activeReqMapObj: any): void;
  _isViableForCaching(cachingInfo: any): any;
  _prepareConfigOptions(reqConfig: any): any;
  _getHandleAs(reqConfig: any): any;
  _getRequestUrl(reqConfig: any): any;
  _buildQueryString(url: any, params: any): any;
  _getRequestBody(reqConfig: any): any;
  _getRequestHeaders(reqConfig: any): any;
  _getClientConfiguredHeaders(additionalHeaders: any): any;
  _getCsrfHeader(csrfCheck: any): any;
  _csrfSafeMethod(method: any): any;
  _getCSRFCookie(): any;

  /**
   * Content-Type set here can be overridden later
   * by headers sent from the client
   */
  _determineContentType(body: any): any;
  _checkRequestProgress(request: any, checkProgress: any): void;
  _stopReqProgressCheck(): void;
}
